type Worker {
  fullName: String!
  identification: ID!
  profilePath: String
  created: String
  modified: String
  entity: String
}

type WorkerImage {
  pathFaceInCollection: String
  identification: String
  collectionId: String
  faceId: String
  created: String
  modified: String
  entity: String
}

type WorkerMarkTime {
  dateRegister: String
  identification: String
  reason: String
  created: String
  modified: String
  entity: String
}

type WorkerImagesKeys {
  identification: ID!
  faceIds: [String]
}

input WorkerMarkTimeQuery {
  identification: String!
  year: String!
  month: String!
  day: String
}

input WorkerInput {
  fullName: String!
  identification: ID!
  profilePath: String
}

input DeleteWorkerImagesInput {
  identification: ID!
  faceIds: [String]
}

input MarkRecordWorkerInput {
  dateRegister: String!
  imageKey: String!
  reason: String!
}

type Query {
  getListWorkerMarkTime(query: WorkerMarkTimeQuery!): [WorkerMarkTime]
  getWorkerDetail(identification: ID!): Worker
  getWorkerImages(identification: ID!): [WorkerImage]
  getListWorker: [Worker]
}

type Mutation {
  putWorker(props: WorkerInput): Worker!
  deleteWorkerImages(props: DeleteWorkerImagesInput): WorkerImagesKeys
  markRecordWorker(props: MarkRecordWorkerInput): Worker
}

schema {
  query: Query
  mutation: Mutation
}
